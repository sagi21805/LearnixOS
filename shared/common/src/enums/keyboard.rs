use core::fmt;

#[repr(u8)]
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
pub enum PS2ScanCode {
    None,

    // Number row
    Esc,
    ReleasedEsc,
    Key1,
    ReleasedKey1,
    Key2,
    ReleasedKey2,
    Key3,
    ReleasedKey3,
    Key4,
    ReleasedKey4,
    Key5,
    ReleasedKey5,
    Key6,
    ReleasedKey6,
    Key7,
    ReleasedKey7,
    Key8,
    ReleasedKey8,
    Key9,
    ReleasedKey9,
    Key0,
    ReleasedKey0,
    Minus,
    ReleasedMinus,
    Equal,
    ReleasedEqual,
    Backspace,
    ReleasedBackspace,

    // Top row
    Tab,
    ReleasedTab,
    Q,
    ReleasedQ,
    W,
    ReleasedW,
    E,
    ReleasedE,
    R,
    ReleasedR,
    T,
    ReleasedT,
    Y,
    ReleasedY,
    U,
    ReleasedU,
    I,
    ReleasedI,
    O,
    ReleasedO,
    P,
    ReleasedP,
    LeftBracket,
    ReleasedLeftBracket,
    RightBracket,
    ReleasedRightBracket,
    Enter,
    ReleasedEnter,
    LeftCtrl,
    ReleasedLeftCtrl,

    // Home row
    A,
    ReleasedA,
    S,
    ReleasedS,
    D,
    ReleasedD,
    F,
    ReleasedF,
    G,
    ReleasedG,
    H,
    ReleasedH,
    J,
    ReleasedJ,
    K,
    ReleasedK,
    L,
    ReleasedL,
    Semicolon,
    ReleasedSemicolon,
    Apostrophe,
    ReleasedApostrophe,
    Backtick,
    ReleasedBacktick,

    // Bottom row
    LeftShift,
    ReleasedLeftShift,
    Backslash,
    ReleasedBackslash,
    Z,
    ReleasedZ,
    X,
    ReleasedX,
    C,
    ReleasedC,
    V,
    ReleasedV,
    B,
    ReleasedB,
    N,
    ReleasedN,
    M,
    ReleasedM,
    Comma,
    ReleasedComma,
    Dot,
    ReleasedDot,
    Slash,
    ReleasedSlash,
    RightShift,
    ReleasedRightShift,
    KeypadStar,
    ReleasedKeypadStar,
    LeftAlt,
    ReleasedLeftAlt,
    Space,
    ReleasedSpace,
    CapsLock,
    ReleasedCapsLock,

    // Function keys
    F1,
    ReleasedF1,
    F2,
    ReleasedF2,
    F3,
    ReleasedF3,
    F4,
    ReleasedF4,
    F5,
    ReleasedF5,
    F6,
    ReleasedF6,
    F7,
    ReleasedF7,
    F8,
    ReleasedF8,
    F9,
    ReleasedF9,
    F10,
    ReleasedF10,
    NumLock,
    ReleasedNumLock,
    ScrollLock,
    ReleasedScrollLock,

    // Keypad
    Keypad7,
    ReleasedKeypad7,
    Keypad8,
    ReleasedKeypad8,
    Keypad9,
    ReleasedKeypad9,
    KeypadMinus,
    ReleasedKeypadMinus,
    Keypad4,
    ReleasedKeypad4,
    Keypad5,
    ReleasedKeypad5,
    Keypad6,
    ReleasedKeypad6,
    KeypadPlus,
    ReleasedKeypadPlus,
    Keypad1,
    ReleasedKeypad1,
    Keypad2,
    ReleasedKeypad2,
    Keypad3,
    ReleasedKeypad3,
    Keypad0,
    ReleasedKeypad0,
    KeypadDot,
    ReleasedKeypadDot,

    // More function keys
    F11,
    ReleasedF11,
    F12,
    ReleasedF12,
    SuperKey,
    ReleasedSuperKey,
}

impl PS2ScanCode {
    pub fn from_scancode(scancode: u8) -> Self {
        match scancode {
            // Number row
            0x01 => PS2ScanCode::Esc,
            0x81 => PS2ScanCode::ReleasedEsc,
            0x02 => PS2ScanCode::Key1,
            0x82 => PS2ScanCode::ReleasedKey1,
            0x03 => PS2ScanCode::Key2,
            0x83 => PS2ScanCode::ReleasedKey2,
            0x04 => PS2ScanCode::Key3,
            0x84 => PS2ScanCode::ReleasedKey3,
            0x05 => PS2ScanCode::Key4,
            0x85 => PS2ScanCode::ReleasedKey4,
            0x06 => PS2ScanCode::Key5,
            0x86 => PS2ScanCode::ReleasedKey5,
            0x07 => PS2ScanCode::Key6,
            0x87 => PS2ScanCode::ReleasedKey6,
            0x08 => PS2ScanCode::Key7,
            0x88 => PS2ScanCode::ReleasedKey7,
            0x09 => PS2ScanCode::Key8,
            0x89 => PS2ScanCode::ReleasedKey8,
            0x0A => PS2ScanCode::Key9,
            0x8A => PS2ScanCode::ReleasedKey9,
            0x0B => PS2ScanCode::Key0,
            0x8B => PS2ScanCode::ReleasedKey0,
            0x0C => PS2ScanCode::Minus,
            0x8C => PS2ScanCode::ReleasedMinus,
            0x0D => PS2ScanCode::Equal,
            0x8D => PS2ScanCode::ReleasedEqual,
            0x0E => PS2ScanCode::Backspace,
            0x8E => PS2ScanCode::ReleasedBackspace,

            // Top row
            0x0F => PS2ScanCode::Tab,
            0x8F => PS2ScanCode::ReleasedTab,
            0x10 => PS2ScanCode::Q,
            0x90 => PS2ScanCode::ReleasedQ,
            0x11 => PS2ScanCode::W,
            0x91 => PS2ScanCode::ReleasedW,
            0x12 => PS2ScanCode::E,
            0x92 => PS2ScanCode::ReleasedE,
            0x13 => PS2ScanCode::R,
            0x93 => PS2ScanCode::ReleasedR,
            0x14 => PS2ScanCode::T,
            0x94 => PS2ScanCode::ReleasedT,
            0x15 => PS2ScanCode::Y,
            0x95 => PS2ScanCode::ReleasedY,
            0x16 => PS2ScanCode::U,
            0x96 => PS2ScanCode::ReleasedU,
            0x17 => PS2ScanCode::I,
            0x97 => PS2ScanCode::ReleasedI,
            0x18 => PS2ScanCode::O,
            0x98 => PS2ScanCode::ReleasedO,
            0x19 => PS2ScanCode::P,
            0x99 => PS2ScanCode::ReleasedP,
            0x1A => PS2ScanCode::LeftBracket,
            0x9A => PS2ScanCode::ReleasedLeftBracket,
            0x1B => PS2ScanCode::RightBracket,
            0x9B => PS2ScanCode::ReleasedRightBracket,
            0x1C => PS2ScanCode::Enter,
            0x9C => PS2ScanCode::ReleasedEnter,
            0x1D => PS2ScanCode::LeftCtrl,
            0x9D => PS2ScanCode::ReleasedLeftCtrl,

            // Home row
            0x1E => PS2ScanCode::A,
            0x9E => PS2ScanCode::ReleasedA,
            0x1F => PS2ScanCode::S,
            0x9F => PS2ScanCode::ReleasedS,
            0x20 => PS2ScanCode::D,
            0xA0 => PS2ScanCode::ReleasedD,
            0x21 => PS2ScanCode::F,
            0xA1 => PS2ScanCode::ReleasedF,
            0x22 => PS2ScanCode::G,
            0xA2 => PS2ScanCode::ReleasedG,
            0x23 => PS2ScanCode::H,
            0xA3 => PS2ScanCode::ReleasedH,
            0x24 => PS2ScanCode::J,
            0xA4 => PS2ScanCode::ReleasedJ,
            0x25 => PS2ScanCode::K,
            0xA5 => PS2ScanCode::ReleasedK,
            0x26 => PS2ScanCode::L,
            0xA6 => PS2ScanCode::ReleasedL,
            0x27 => PS2ScanCode::Semicolon,
            0xA7 => PS2ScanCode::ReleasedSemicolon,
            0x28 => PS2ScanCode::Apostrophe,
            0xA8 => PS2ScanCode::ReleasedApostrophe,
            0x29 => PS2ScanCode::Backtick,
            0xA9 => PS2ScanCode::ReleasedBacktick,

            // Bottom row
            0x2A => PS2ScanCode::LeftShift,
            0xAA => PS2ScanCode::ReleasedLeftShift,
            0x2B => PS2ScanCode::Backslash,
            0xAB => PS2ScanCode::ReleasedBackslash,
            0x2C => PS2ScanCode::Z,
            0xAC => PS2ScanCode::ReleasedZ,
            0x2D => PS2ScanCode::X,
            0xAD => PS2ScanCode::ReleasedX,
            0x2E => PS2ScanCode::C,
            0xAE => PS2ScanCode::ReleasedC,
            0x2F => PS2ScanCode::V,
            0xAF => PS2ScanCode::ReleasedV,
            0x30 => PS2ScanCode::B,
            0xB0 => PS2ScanCode::ReleasedB,
            0x31 => PS2ScanCode::N,
            0xB1 => PS2ScanCode::ReleasedN,
            0x32 => PS2ScanCode::M,
            0xB2 => PS2ScanCode::ReleasedM,
            0x33 => PS2ScanCode::Comma,
            0xB3 => PS2ScanCode::ReleasedComma,
            0x34 => PS2ScanCode::Dot,
            0xB4 => PS2ScanCode::ReleasedDot,
            0x35 => PS2ScanCode::Slash,
            0xB5 => PS2ScanCode::ReleasedSlash,
            0x36 => PS2ScanCode::RightShift,
            0xB6 => PS2ScanCode::ReleasedRightShift,
            0x37 => PS2ScanCode::KeypadStar,
            0xB7 => PS2ScanCode::ReleasedKeypadStar,
            0x38 => PS2ScanCode::LeftAlt,
            0xB8 => PS2ScanCode::ReleasedLeftAlt,
            0x39 => PS2ScanCode::Space,
            0xB9 => PS2ScanCode::ReleasedSpace,
            0x3A => PS2ScanCode::CapsLock,
            0xBA => PS2ScanCode::ReleasedCapsLock,

            // Function keys
            0x3B => PS2ScanCode::F1,
            0xBB => PS2ScanCode::ReleasedF1,
            0x3C => PS2ScanCode::F2,
            0xBC => PS2ScanCode::ReleasedF2,
            0x3D => PS2ScanCode::F3,
            0xBD => PS2ScanCode::ReleasedF3,
            0x3E => PS2ScanCode::F4,
            0xBE => PS2ScanCode::ReleasedF4,
            0x3F => PS2ScanCode::F5,
            0xBF => PS2ScanCode::ReleasedF5,
            0x40 => PS2ScanCode::F6,
            0xC0 => PS2ScanCode::ReleasedF6,
            0x41 => PS2ScanCode::F7,
            0xC1 => PS2ScanCode::ReleasedF7,
            0x42 => PS2ScanCode::F8,
            0xC2 => PS2ScanCode::ReleasedF8,
            0x43 => PS2ScanCode::F9,
            0xC3 => PS2ScanCode::ReleasedF9,
            0x44 => PS2ScanCode::F10,
            0xC4 => PS2ScanCode::ReleasedF10,
            0x45 => PS2ScanCode::NumLock,
            0xC5 => PS2ScanCode::ReleasedNumLock,
            0x46 => PS2ScanCode::ScrollLock,
            0xC6 => PS2ScanCode::ReleasedScrollLock,

            // Keypad
            0x47 => PS2ScanCode::Keypad7,
            0xC7 => PS2ScanCode::ReleasedKeypad7,
            0x48 => PS2ScanCode::Keypad8,
            0xC8 => PS2ScanCode::ReleasedKeypad8,
            0x49 => PS2ScanCode::Keypad9,
            0xC9 => PS2ScanCode::ReleasedKeypad9,
            0x4A => PS2ScanCode::KeypadMinus,
            0xCA => PS2ScanCode::ReleasedKeypadMinus,
            0x4B => PS2ScanCode::Keypad4,
            0xCB => PS2ScanCode::ReleasedKeypad4,
            0x4C => PS2ScanCode::Keypad5,
            0xCC => PS2ScanCode::ReleasedKeypad5,
            0x4D => PS2ScanCode::Keypad6,
            0xCD => PS2ScanCode::ReleasedKeypad6,
            0x4E => PS2ScanCode::KeypadPlus,
            0xCE => PS2ScanCode::ReleasedKeypadPlus,
            0x4F => PS2ScanCode::Keypad1,
            0xCF => PS2ScanCode::ReleasedKeypad1,
            0x50 => PS2ScanCode::Keypad2,
            0xD0 => PS2ScanCode::ReleasedKeypad2,
            0x51 => PS2ScanCode::Keypad3,
            0xD1 => PS2ScanCode::ReleasedKeypad3,
            0x52 => PS2ScanCode::Keypad0,
            0xD2 => PS2ScanCode::ReleasedKeypad0,
            0x53 => PS2ScanCode::KeypadDot,
            0xD3 => PS2ScanCode::ReleasedKeypadDot,

            // F11 / F12
            0x57 => PS2ScanCode::F11,
            0xD7 => PS2ScanCode::ReleasedF11,
            0x58 => PS2ScanCode::F12,
            0xD8 => PS2ScanCode::ReleasedF12,
            0x5B => PS2ScanCode::SuperKey,
            0xDB => PS2ScanCode::ReleasedSuperKey,
            _ => PS2ScanCode::None,
        }
    }
}

impl PS2ScanCode {
    pub fn to_str(&self) -> &'static str {
        match self {
            // Number row
            PS2ScanCode::Esc => "\x1b",
            PS2ScanCode::Key1 => "1",
            PS2ScanCode::Key2 => "2",
            PS2ScanCode::Key3 => "3",
            PS2ScanCode::Key4 => "4",
            PS2ScanCode::Key5 => "5",
            PS2ScanCode::Key6 => "6",
            PS2ScanCode::Key7 => "7",
            PS2ScanCode::Key8 => "8",
            PS2ScanCode::Key9 => "9",
            PS2ScanCode::Key0 => "0",
            PS2ScanCode::Minus => "-",
            PS2ScanCode::Equal => "=",
            PS2ScanCode::Backspace => "\x08",

            // Top row
            PS2ScanCode::Tab => "\t",
            PS2ScanCode::Q => "q",
            PS2ScanCode::W => "w",
            PS2ScanCode::E => "e",
            PS2ScanCode::R => "r",
            PS2ScanCode::T => "t",
            PS2ScanCode::Y => "y",
            PS2ScanCode::U => "u",
            PS2ScanCode::I => "i",
            PS2ScanCode::O => "o",
            PS2ScanCode::P => "p",
            PS2ScanCode::LeftBracket => "[",
            PS2ScanCode::RightBracket => "]",
            PS2ScanCode::Enter => "\n",

            // Home row
            PS2ScanCode::A => "a",
            PS2ScanCode::S => "s",
            PS2ScanCode::D => "d",
            PS2ScanCode::F => "f",
            PS2ScanCode::G => "g",
            PS2ScanCode::H => "h",
            PS2ScanCode::J => "j",
            PS2ScanCode::K => "k",
            PS2ScanCode::L => "l",
            PS2ScanCode::Semicolon => ";",
            PS2ScanCode::Apostrophe => "'",
            PS2ScanCode::Backtick => "`",

            // Bottom row
            PS2ScanCode::Backslash => "\\",
            PS2ScanCode::Z => "z",
            PS2ScanCode::X => "x",
            PS2ScanCode::C => "c",
            PS2ScanCode::V => "v",
            PS2ScanCode::B => "b",
            PS2ScanCode::N => "n",
            PS2ScanCode::M => "m",
            PS2ScanCode::Comma => ",",
            PS2ScanCode::Dot => ".",
            PS2ScanCode::Slash => "/",
            PS2ScanCode::KeypadStar => "Keypad *",
            PS2ScanCode::LeftAlt => "Left Alt",
            PS2ScanCode::Space => " ",

            // Function keys
            PS2ScanCode::F1 => "F1",
            PS2ScanCode::F2 => "F2",
            PS2ScanCode::F3 => "F3",
            PS2ScanCode::F4 => "F4",
            PS2ScanCode::F5 => "F5",
            PS2ScanCode::F6 => "F6",
            PS2ScanCode::F7 => "F7",
            PS2ScanCode::F8 => "F8",
            PS2ScanCode::F9 => "F9",
            PS2ScanCode::F10 => "F10",
            PS2ScanCode::NumLock => "Num Lock",
            PS2ScanCode::ScrollLock => "Scroll Lock",
            PS2ScanCode::CapsLock => "CapsLock",
            // Keypad
            PS2ScanCode::Keypad7 => "Keypad 7",
            PS2ScanCode::Keypad8 => "Keypad 8",
            PS2ScanCode::Keypad9 => "Keypad 9",
            PS2ScanCode::KeypadMinus => "Keypad -",
            PS2ScanCode::Keypad4 => "Keypad 4",
            PS2ScanCode::Keypad5 => "Keypad 5",
            PS2ScanCode::Keypad6 => "Keypad 6",
            PS2ScanCode::KeypadPlus => "Keypad +",
            PS2ScanCode::Keypad1 => "Keypad 1",
            PS2ScanCode::Keypad2 => "Keypad 2",
            PS2ScanCode::Keypad3 => "Keypad 3",
            PS2ScanCode::Keypad0 => "Keypad 0",
            PS2ScanCode::KeypadDot => "Keypad .",
            PS2ScanCode::F11 => "F11",
            PS2ScanCode::F12 => "F12",
            PS2ScanCode::None => "",
            _ => "",
        }
    }

    pub fn to_str_shifted(&self) -> &'static str {
        match self {
            // Number row
            // PS2ScanCode::Esc => "\x1b",
            PS2ScanCode::Esc => "test",
            PS2ScanCode::Key1 => "!",
            PS2ScanCode::Key2 => "@",
            PS2ScanCode::Key3 => "#",
            PS2ScanCode::Key4 => "$",
            PS2ScanCode::Key5 => "%",
            PS2ScanCode::Key6 => "^",
            PS2ScanCode::Key7 => "&",
            PS2ScanCode::Key8 => "*",
            PS2ScanCode::Key9 => "(",
            PS2ScanCode::Key0 => ")",
            PS2ScanCode::Minus => "_",
            PS2ScanCode::Equal => "+",
            PS2ScanCode::Backspace => "\x08",

            // Top row
            PS2ScanCode::Tab => "\t",
            PS2ScanCode::Q => "Q",
            PS2ScanCode::W => "W",
            PS2ScanCode::E => "E",
            PS2ScanCode::R => "R",
            PS2ScanCode::T => "T",
            PS2ScanCode::Y => "Y",
            PS2ScanCode::U => "U",
            PS2ScanCode::I => "I",
            PS2ScanCode::O => "O",
            PS2ScanCode::P => "P",
            PS2ScanCode::LeftBracket => "{",
            PS2ScanCode::RightBracket => "}",
            PS2ScanCode::Enter => "\n",

            // Home row
            PS2ScanCode::A => "A",
            PS2ScanCode::S => "S",
            PS2ScanCode::D => "D",
            PS2ScanCode::F => "F",
            PS2ScanCode::G => "G",
            PS2ScanCode::H => "H",
            PS2ScanCode::J => "J",
            PS2ScanCode::K => "K",
            PS2ScanCode::L => "L",
            PS2ScanCode::Semicolon => ":",
            PS2ScanCode::Apostrophe => "\"",
            PS2ScanCode::Backtick => "~",

            // Bottom row
            PS2ScanCode::LeftShift => "",
            PS2ScanCode::Backslash => "|",
            PS2ScanCode::Z => "Z",
            PS2ScanCode::X => "X",
            PS2ScanCode::C => "C",
            PS2ScanCode::V => "V",
            PS2ScanCode::B => "B",
            PS2ScanCode::N => "N",
            PS2ScanCode::M => "M",
            PS2ScanCode::Comma => "<",
            PS2ScanCode::Dot => ">",
            PS2ScanCode::Slash => "?",
            PS2ScanCode::RightShift => "",
            PS2ScanCode::KeypadStar => "Keypad *",
            PS2ScanCode::Space => " ",

            // Function keys
            PS2ScanCode::F1 => "F1",
            PS2ScanCode::F2 => "F2",
            PS2ScanCode::F3 => "F3",
            PS2ScanCode::F4 => "F4",
            PS2ScanCode::F5 => "F5",
            PS2ScanCode::F6 => "F6",
            PS2ScanCode::F7 => "F7",
            PS2ScanCode::F8 => "F8",
            PS2ScanCode::F9 => "F9",
            PS2ScanCode::F10 => "F10",
            PS2ScanCode::NumLock => "Num Lock",
            PS2ScanCode::ScrollLock => "Scroll Lock",

            // Keypad
            PS2ScanCode::Keypad7 => "Keypad 7",
            PS2ScanCode::Keypad8 => "Keypad 8",
            PS2ScanCode::Keypad9 => "Keypad 9",
            PS2ScanCode::KeypadMinus => "Keypad -",
            PS2ScanCode::Keypad4 => "Keypad 4",
            PS2ScanCode::Keypad5 => "Keypad 5",
            PS2ScanCode::Keypad6 => "Keypad 6",
            PS2ScanCode::KeypadPlus => "Keypad +",
            PS2ScanCode::Keypad1 => "Keypad 1",
            PS2ScanCode::Keypad2 => "Keypad 2",
            PS2ScanCode::Keypad3 => "Keypad 3",
            PS2ScanCode::Keypad0 => "Keypad 0",
            PS2ScanCode::KeypadDot => "Keypad .",
            PS2ScanCode::F11 => "F11",
            PS2ScanCode::F12 => "F12",
            PS2ScanCode::None => "",
            _ => "",
        }
    }
}

impl fmt::Display for PS2ScanCode {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        write!(f, "{}", self.to_str())
    }
}
